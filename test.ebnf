program = declaration, {declaration};

decl = 
   varDeclaration
   | functionDeclaration
;

(* VARIABLE *)
varDeclaration = type, varDeclarationInit;
varDeclarationInit = varDeclarationId, ['=', simpleExpression
];
varDeclarationId = ID;

(* FUNCTION sprawdzić czy potem mozna używać bez typów *)
functionDeclaration = [type], ID, "(", parms, ")", statement;
parms = {type, ID};

(* STATEMENTS *)
statement = 
   expressionStatement
   | compoundStatement
   | ifStatement
   | whileStatement
   | returnStatement
   | exceptionStatement
;

returnStatement = "return", [expressionStatement], ";";
whileStatement = "while", "(", simpleExpression, ")", statement;
ifStatement = "if", "(" simpleExpression, ")", statement;
compoundStatement = "{", {varDeclaration}, {statement} "}";
expressionStatement = [expression], ";";
exceptionStatement = "try", statement, ["catch", statement];


type = 
   "int"
   | "float"
   | "string"
   | "bool"
   | CURRENCY_NAME
;

int = 
   [-]
   ,
   "0" 
   | "1-9",{DIGIT}
;

float =
   int, '.' , DIGIT, {DIGIT}
;

currency = 
   (
      int 
      | float
   )
   ,
   CURRENCY_NAME
;

string = "'", {CHAR} "'";

ID = LETTER;
DIGIT = "0-9";
LETTER =
   "a-z"
   | "A-Z"
;
SYMBOL = "[" | "]" | "{" | "}" | "(" | ")" | "<" | ">" | "'" | '"' | "=" | "|" | "." | "," | ";" "_";

CHAR = 
   DIGIT
   | LETTER
   | SYMBOL
;

CURRENCY_NAME = ; (*I.E. 'PLN' | 'EUR' | 'USD';*)